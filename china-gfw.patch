diff --git a/bootstrap.sh b/bootstrap.sh
index 789b631..2b9f46d 100755
--- a/bootstrap.sh
+++ b/bootstrap.sh
@@ -63,8 +63,11 @@ if [ $SKIP_ROOT_INSTALLS == "True" ]; then
 elif [ -f $protobuf_dist/.build_finished ]; then
   echo "skipping protobuf build. remove $protobuf_dist to force rebuild."
 else
-  rm -rf $protobuf_dist
+  # rm -rf $protobuf_dist
+  rm -rf $protobuf_dist/lib
+  rm -rf $protobuf_dist/lib64
   mkdir -p $protobuf_dist/lib/python2.7/site-packages
+  mkdir -p $protobuf_dist/lib64/python2.7/site-packages
   # The directory may not have existed yet, so it may not have been
   # picked up by dev.env yet, but the install needs it to exist first,
   # and be in PYTHONPATH.
@@ -80,7 +83,7 @@ if [ $SKIP_ROOT_INSTALLS == "True" ]; then
 elif [ -f $grpc_dist/.build_finished ]; then
   echo "skipping gRPC build. remove $grpc_dist to force rebuild."
 else
-  rm -rf $grpc_dist
+  # rm -rf $grpc_dist
   mkdir -p $grpc_dist
   ./travis/install_grpc.sh $grpc_dist || fail "gRPC build failed"
   touch $grpc_dist/.build_finished
@@ -89,6 +92,50 @@ fi
 ln -nfs $VTTOP/third_party/go/launchpad.net $VTROOT/src
 go install launchpad.net/gozk/zookeeper
 
+
+mkdir -p $GOPATH/src/golang.org/x
+if [ ! -d $GOPATH/src/golang.org/x/net ]; then
+    cd $GOPATH/src/golang.org/x;git clone  https://github.com/golang/net.git ;cd -
+else
+    cd $GOPATH/src/golang.org/x/net;git pull;cd -
+fi
+if [ ! -d $GOPATH/src/golang.org/x/crypto ]; then
+    cd $GOPATH/src/golang.org/x;git clone   https://github.com/golang/crypto.git;cd -
+else
+    cd $GOPATH/src/golang.org/x/crypto;git pull;cd -
+fi
+if [ ! -d $GOPATH/src/golang.org/x/tools ]; then
+    cd $GOPATH/src/golang.org/x;git clone  https://github.com/golang/tools.git;cd -
+else
+    cd $GOPATH/src/golang.org/x/tools;git pull;cd -
+fi
+go install golang.org/x/tools/cmd/goimports
+
+if [ ! -d $GOPATH/src/golang.org/x/oauth2 ]; then
+    cd $GOPATH/src/golang.org/x;git clone  https://github.com/golang/oauth2.git;go install;cd -
+else
+    cd $GOPATH/src/golang.org/x/oauth2;git pull;go install;cd -
+fi
+if [ ! -d $GOPATH/src/google.golang.org/grpc ]; then
+    mkdir -p $GOPATH/src/google.golang.org
+    cd $GOPATH/src/google.golang.org/;git clone  https://github.com/grpc/grpc-go.git grpc;cd -
+else
+    cd $GOPATH/src/google.golang.org/grpc/;git pull;go install;cd -
+fi
+
+if [ ! -d $GOPATH/src/google.golang.org/cloud ]; then
+    mkdir -p $GOPATH/src/google.golang.org
+    cd $GOPATH/src/google.golang.org/;git clone  https://github.com/GoogleCloudPlatform/gcloud-golang.git cloud;cd -
+else
+    cd $GOPATH/src/google.golang.org/cloud/;git pull;go install;cd -
+fi
+
+if [ ! -d $GOPATH/src/google.golang.org/api ]; then
+    mkdir -p $GOPATH/src/google.golang.org
+    cd $GOPATH/src/google.golang.org/;git clone  https://github.com/google/google-api-go-client.git api;cd -
+else
+    cd $GOPATH/src/google.golang.org/api/googleapi;git pull;go install;cd -
+fi
 # Download third-party Go libraries.
 # (We use one go get command (and therefore one variable) for all repositories because this saves us several seconds of execution time.)
 repos="github.com/golang/glog \
@@ -96,13 +143,6 @@ repos="github.com/golang/glog \
        github.com/golang/protobuf/proto \
        github.com/golang/protobuf/protoc-gen-go \
        github.com/tools/godep \
-       golang.org/x/net/context \
-       golang.org/x/oauth2/google \
-       golang.org/x/tools/cmd/goimports \
-       google.golang.org/grpc \
-       google.golang.org/cloud \
-       google.golang.org/cloud/storage \
-       golang.org/x/crypto/ssh/terminal \
 "
 
 # Packages for uploading code coverage to coveralls.io (used by Travis CI).
@@ -111,7 +151,8 @@ repos+=" github.com/modocache/gover github.com/mattn/goveralls"
 # if Go is installed somewhere that requires root access.
 source tools/shell_functions.inc
 if goversion_min 1.4; then
-  repos+=" golang.org/x/tools/cmd/cover"
+  # repos+=" golang.org/x/tools/cmd/cover"
+  repos+=" "
 else
   repos+=" code.google.com/p/go.tools/cmd/cover"
 fi
diff --git a/docker/bootstrap/Dockerfile.common b/docker/bootstrap/Dockerfile.common
index 530988f..413d7b7 100644
--- a/docker/bootstrap/Dockerfile.common
+++ b/docker/bootstrap/Dockerfile.common
@@ -32,6 +32,7 @@ RUN mkdir -p /vt/bin && \
     curl -sL https://phar.phpunit.de/phpunit-4.8.9.phar > /vt/bin/phpunit && \
     chmod +x /vt/bin/phpunit && \
     curl -sS https://getcomposer.org/installer | php -- --install-dir=/vt/bin --filename=composer && \
+    pecl channel-update pecl.php.net &&\
     pecl install xdebug && \
     echo "zend_extension=$(pecl config-get ext_dir default)/xdebug.so" > /etc/php5/cli/conf.d/20-xdebug.ini
 
@@ -78,11 +79,12 @@ COPY composer.json composer.lock /vt/src/github.com/youtube/vitess/
 RUN $VTTOP/travis/install_protobuf.sh
 RUN $VTTOP/travis/install_grpc.sh
 
-# Install gRPC PHP dependencies
-RUN pecl install grpc-beta && \
-    echo 'extension=grpc.so' > /etc/php5/cli/conf.d/20-grpc.ini && \
-    cd /vt/src/github.com/youtube/vitess && \
-    composer install
+# I comments this (I don't use php and this stop the building process)
+## Install gRPC PHP dependencies
+# RUN pecl install grpc-beta && \
+#     echo 'extension=grpc.so' > /etc/php5/cli/conf.d/20-grpc.ini && \
+#     cd /vt/src/github.com/youtube/vitess && \
+#     composer install
 
 # Create vitess user
 RUN groupadd -r vitess && useradd -r -g vitess vitess && \
diff --git a/docker/bootstrap/build.sh b/docker/bootstrap/build.sh
index 7dd0221..e2f460d 100755
--- a/docker/bootstrap/build.sh
+++ b/docker/bootstrap/build.sh
@@ -15,4 +15,4 @@ fi
 # To avoid AUFS permission issues, files must allow access by "other"
 chmod -R o=g *
 
-docker build --no-cache -f docker/bootstrap/Dockerfile.$flavor -t vitess/bootstrap:$flavor .
+docker build  -f docker/bootstrap/Dockerfile.$flavor -t vitess/bootstrap:$flavor .
diff --git a/docker/lite/build.sh b/docker/lite/build.sh
index d7a1ceb..00829ba 100755
--- a/docker/lite/build.sh
+++ b/docker/lite/build.sh
@@ -13,7 +13,7 @@ vttop=vt/src/github.com/youtube/vitess
 mkdir -p $lite/vt/vtdataroot
 
 mkdir -p $lite/vt/bin
-(cd base/vt/bin; cp mysqlctld vtctld vtgate vttablet vtworker $lite/vt/bin/)
+(cd base/vt/bin; cp mysqlctld mysqlctl vtctld vtgate vttablet vtworker $lite/vt/bin/)
 
 cp -R base/vt/dist lite/vt/
 
diff --git a/travis/install_protobuf.sh b/travis/install_protobuf.sh
index bc114de..7443766 100755
--- a/travis/install_protobuf.sh
+++ b/travis/install_protobuf.sh
@@ -10,6 +10,18 @@ protobuf_dist="$1"
 if [ "$protobuf_dist" != "" ]; then
   cd $protobuf_dist
 fi
+if [ "$protobuf_dist" == "" ]; then
+    protobuf_dist="`pwd`"
+fi
+
+rm -rf $protobuf_dist/lib
+rm -rf $protobuf_dist/lib64
+mkdir -p $protobuf_dist/lib/python2.7/site-packages
+mkdir -p $protobuf_dist/lib64/python2.7/site-packages
+# The directory may not have existed yet, so it may not have been
+# picked up by dev.env yet, but the install needs it to exist first,
+# and be in PYTHONPATH.
+export PYTHONPATH=$protobuf_dist/lib/python2.7/site-packages:$PYTHONPATH
 
 # this is the default working beta version on Linux, beta-2 doesn't work here
 protobuf_beta_version=1
@@ -19,10 +31,11 @@ if [ `uname -s` == "Darwin" ]; then
   protobuf_beta_version=2
 fi
 
-wget https://github.com/google/protobuf/archive/v3.0.0-beta-$protobuf_beta_version.tar.gz
+wget -c https://github.com/google/protobuf/archive/v3.0.0-beta-$protobuf_beta_version.tar.gz
 tar -xvzf v3.0.0-beta-$protobuf_beta_version.tar.gz
 cd protobuf-3.0.0-beta-$protobuf_beta_version
 
+sed -i"" 's|https://googlemock.googlecode.com/files/gmock-1.7.0.zip|-L https://github.com/jixiuf/vitess-build-patch/raw/master/files/gmock-1.7.0.zip|g'  $protobuf_dist/protobuf-3.0.0-beta-$protobuf_beta_version/autogen.sh
 ./autogen.sh
 if [ "$protobuf_dist" != "" ]; then
   ./configure --prefix=$protobuf_dist
